/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable @next/next/no-img-element */
import Layout from "@/components/layout";
import { db } from "@/server/db";
import { Menu, Transition } from "@headlessui/react";
import { ChevronDownIcon } from "@heroicons/react/20/solid";
import { Loading } from "@nextui-org/react";
import dayjs from "dayjs";
import "dayjs/locale/id";
import relativeTime from "dayjs/plugin/relativeTime";
import {
  collection,
  doc,
  getDocs,
  orderBy,
  query,
  updateDoc,
} from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import { Fragment, useEffect, useRef, useState } from "react";
import styles from "../../../styles/Home.module.css";
import LayoutAdmin from "@/components/layout-admin";
export default function LayouUser() {
  const route = useRouter();
  dayjs.locale("id");
  dayjs.extend(relativeTime);
  const snapshot = useRef(null);
  const [isLoading, setIsloading] = useState(true);
  const getDBFromFirestore = async () => {
    const querySnapshot = query(
      collection(db, "jadwal_dokter"),
      orderBy("nama", "asc")
    );
    const gettt = await getDocs(querySnapshot);
    snapshot.current = gettt.docs;
    setTimeout(() => {
      setIsloading(false);
    }, 1000);
  };

  useEffect(() => {
    getDBFromFirestore();
  }, []);

  if (isLoading) {
    return (
      <div className={styles.main}>
        <Loading color={"currentColor"} />
      </div>
    );
  } else {
    const post = snapshot.current;
    const data = Object.values(post);
    return (
      <LayoutAdmin>
        <Head>
          <title>Berita - Puskesmas Kambang</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/logo.jpg" />
        </Head>

        <div className="overflow-x-auto p-10">
          <table className="min-w-full divide-y-2 divide-gray-200 bg-white text-sm">
            <thead className="ltr:text-left rtl:text-right bg-[#014E00] text-white">
              <tr>
                <th className="text-left px-4 py-2 font-medium">Nama</th>
                <th className="text-left px-4 py-2 font-medium">Poli</th>
                <th className="text-left px-4 py-2 font-medium">Jadwal</th>
                <th className="px-4 py-2 font-medium">Status</th>
              </tr>
            </thead>

            <tbody className="divide-y divide-gray-200">
              {data.map((e, i) => {
                const Data = e.data();
                return (
                  <tr
                    key={i}
                    className=" bg-gray-50 hover:bg-[#014E00] hover:text-white rounded-lg hover:rounded-lg"
                  >
                    <td className="px-4 py-2 font-medium">{Data.nama}</td>
                    <td className="px-4 py-2">{Data.poli}</td>
                    <td className="px-4 py-2">{Data.tanggal_jadwal}</td>
                    <td className="px-4 py-2 flex justify-center items-center">
                      <Menu
                        as="div"
                        className="relative inline-block text-left"
                      >
                        <div>
                          <Menu.Button className="inline-flex w-full justify-center rounded-md bg-[#014E00]  px-4 py-1 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75">
                            {Data.status}
                            <ChevronDownIcon
                              className="ml-2 -mr-1 h-5 w-5 text-violet-200 hover:text-violet-100"
                              aria-hidden="true"
                            />
                          </Menu.Button>
                        </div>
                        <Transition
                          as={Fragment}
                          enter="transition ease-out duration-100"
                          enterFrom="transform opacity-0 scale-95"
                          enterTo="transform opacity-100 scale-100"
                          leave="transition ease-in duration-75"
                          leaveFrom="transform opacity-100 scale-100"
                          leaveTo="transform opacity-0 scale-95"
                        >
                          <Menu.Items className="flex-col justify-center items-center text-center   mt-2 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                            <button
                              onClick={async () => {
                                const frankDocRef = doc(
                                  db,
                                  "jadwal_dokter",
                                  `${e.id}`
                                );
                                await updateDoc(frankDocRef, {
                                  status: "Ada",
                                  tanggal_jadwal:
                                    dayjs().format("ddd, MMM D, YYYY"),
                                });
                                route.reload();
                              }}
                              size={"xs"}
                              className="text-black w-full hover:bg-[#014E00] hover:text-white"
                            >
                              Ada
                            </button>
                            <button
                              onClick={async () => {
                                const frankDocRef = doc(
                                  db,
                                  "jadwal_dokter",
                                  `${e.id}`
                                );
                                await updateDoc(frankDocRef, {
                                  status: "Tidak Ada",
                                  tanggal_jadwal: "-",
                                });
                                route.reload();
                              }}
                              size={"xs"}
                              className="text-black w-full hover:bg-[#014E00] hover:text-white"
                            >
                              Tidak Ada
                            </button>
                          </Menu.Items>
                        </Transition>
                      </Menu>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      </LayoutAdmin>
    );
  }
}
